! Divvun & Giellatekno - open source grammars for Zulu language
! Copyright © 2015 The University of Tromsø & the Norwegian Sámi Parliament
! http://giellatekno.uit.no & http://divvun.no
!
! This program is free software; you can redistribute and/or modify
! this file under the terms of the GNU General Public License as published by
! the Free Software Foundation, either version 3 of the License, or
! (at your option) any later version. The GNU General Public License
! is found at http://www.gnu.org/licenses/gpl.html. It is
! also available in the file $GTHOME/LICENSE.txt.
!
! Other licensing options are available upon request, please contact
! giellatekno@uit.no or feedback@divvun.no

!! Morphology
!  ----------

Multichar_Symbols  !!≈ !!!Definitions for @CODE@
+V +N +A +NM

+SC +Pres +Fut +Pers +Pot +OC +Lat +Pst +Cons
+Sg1 +Sg2 +Sg3 +Pl1 +Pl2 +Pl3 
+Stat +VFA +VFE 

+CL1 +CL1a +CL2 +CL2a +CL3 +CL4 +CL5 +CL6 +CL7 +CL8 +CL9 +CL10 +CL11 +CL14 +CL15

+1^1/2 +2^1/2 +1a^1a/2a +2a^1a/2a +3^3/4 +4^3/4 +5^5/6 +6^5/6 +7^7/8 +8^7/8
+9^9/6 +6^9/6 +9^9/10 +10^9/10 +11 +14 +15
%> ^VSUF

!! !!Flag diacritics
!! We have manually optimised the structure of our lexicon using following
!! flag diacritics to restrict morhpological combinatorics - only allow compounds
!! with verbs if the verb is further derived into a noun again:
 @P.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @D.NeedNoun.ON@    !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
 @C.NeedNoun@       !!≈ | @CODE@ | (Dis)allow compounds with verbs unless nominalised
!! 
!! For languages that allow compounding, the following flag diacritics are needed
!! to control position-based compounding restrictions for nominals. Their use is
!! handled automatically if combined with +CmpN/xxx tags. If not used, they will
!! do no harm.
 @P.CmpFrst.FALSE@ !!≈ | @CODE@ | Require that words tagged as such only appear first
 @D.CmpPref.TRUE@  !!≈ | @CODE@ | Block such words from entering ENDLEX
 @P.CmpPref.FALSE@ !!≈ | @CODE@ | Block these words from making further compounds
 @D.CmpLast.TRUE@  !!≈ | @CODE@ | Block such words from entering R
 @D.CmpNone.TRUE@  !!≈ | @CODE@ | Combines with the next tag to prohibit compounding
 @U.CmpNone.FALSE@ !!≈ | @CODE@ | Combines with the prev tag to prohibit compounding
 @P.CmpOnly.TRUE@  !!≈ | @CODE@ | Sets a flag to indicate that the word has passed R
 @D.CmpOnly.FALSE@ !!≈ | @CODE@ | Disallow words coming directly from root.
!! 
!! Use the following flag diacritics to control downcasing of derived proper
!! nouns (e.g. Finnish Pariisi -> pariisilainen). See e.g. North Sámi for how to use
!! these flags. There exists a ready-made regex that will do the actual down-casing
!! given the proper use of these flags.
 @U.Cap.Obl@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.
 @U.Cap.Opt@        !!≈ | @CODE@ | Allowing downcasing of derived names: deatnulasj.

@P.NeedNeg.ON@
@D.NeedNeg.ON@
@C.NeedNeg@

LEXICON Root
V-INIT ;
N-INIT ;
Punctuation ;
Symbols     ;

! Since I do not know what follows, I make two preliminary lexica under Root,
! one for the beginning of a noun and the other for the biginning of a verb.

LEXICON K 
# ;